
val String filename = "energy.rules"

rule "Energieverbrauch init"
when
    System started or
    Time is midnight
then
    createTimer(now.plusSeconds(180)) [|
        Wattages.members.forEach(item |
            if (item.state == NULL) item.postUpdate(0)
        )
    ]
end


rule "BD_Deckenlicht_Power" when Item BD_Deckenlicht received update
then if (BD_Deckenlicht.state == ON) BD_Deckenlicht_Power.postUpdate(7.5) else BD_Deckenlicht_Power.postUpdate(0) end



rule "Flur_Deckenlicht_Power" when Item Flur_Deckenlicht received update
then if (Flur_Deckenlicht.state == ON) Flur_Deckenlicht_Power.postUpdate(21.6) else Flur_Deckenlicht_Power.postUpdate(0) end



rule "Kueche_Deckenlicht_Power" when Item Kueche_Deckenlicht received update
then if (Kueche_Deckenlicht.state == ON) Kueche_Deckenlicht_Power.postUpdate(23.0) else Kueche_Deckenlicht_Power.postUpdate(0) end



rule "SZ_Deckenlicht_Power" when Item SZ_Deckenlicht received update
then if (SZ_Deckenlicht.state == ON) SZ_Deckenlicht_Power.postUpdate(10.2) else SZ_Deckenlicht_Power.postUpdate(0) end



rule "WZ_Lacks_LEDs_Power" when Item WZ_Lacks_LEDs received update
then if (WZ_Lacks_LEDs.state == ON) WZ_Lacks_LEDs_Power.postUpdate(17.0) else WZ_Lacks_LEDs_Power.postUpdate(0) end



rule "WZ_Lacks_Lampe_Power" when Item WZ_Lacks_Lampe received update
then if (WZ_Lacks_Lampe.state == ON) WZ_Lacks_Lampe_Power.postUpdate(60.0) else WZ_Lacks_Lampe_Power.postUpdate(0) end



rule "WZ_Origami_Power" when Item WZ_Origami received update
then if (WZ_Origami.state == ON) WZ_Origami_Power.postUpdate(19.0) else WZ_Origami_Power.postUpdate(0) end



rule "WZ_Expedit_Power" when Item WZ_Expedit received update
then if (WZ_Expedit.state == ON) WZ_Expedit_Power.postUpdate(2.8) else WZ_Expedit_Power.postUpdate(0) end



rule "WZ_Goldfruchtpalme_Power" when Item WZ_Goldfruchtpalme received update
then if (WZ_Goldfruchtpalme.state == ON) WZ_Goldfruchtpalme_Power.postUpdate(40.0) else WZ_Goldfruchtpalme_Power.postUpdate(0) end



rule "KU_Arbeit_Power" when Item KU_Arbeit received update
then if (KU_Arbeit.state == ON) KU_Arbeit_Power.postUpdate(8.5) else KU_Arbeit_Power.postUpdate(0) end



rule "BK_Balkonmagic_Power" when Item BK_Balkonmagic received update
then if (BK_Balkonmagic.state == ON) BK_Balkonmagic_Power.postUpdate(42.0) else BK_Balkonmagic_Power.postUpdate(0) end



//Curve Fitting done by https://www.mycurvefit.com
rule "KU_Edison_Dimmer_Power" when Item KU_Edison_Dimmer_Level received update
then KU_Edison_Dimmer_Power.postUpdate((1.170909 * (KU_Edison_Dimmer_Level.state as PercentType)).intValue()) end


// vim: syntax=Xtend
