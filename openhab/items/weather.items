 
String temperature_out <temperature> { channel="exec:command:weatherstation_temperature:output" }
String willRain_out <rain> { channel="exec:command:weatherstation_willRain:output" }
String precipitation_out <level> { channel="exec:command:weatherstation_howMuchRain:output" }
String isRaining_out <rain> { channel="exec:command:weatherstation_isRaining:output" }
//String Level_from_periodic_script { channel="exec:command:weatherstation_waterlevel:output", autorun="false" } // set by thing's exec script
String WanAddress <settings> { channel="exec:command:getwan:output" } // set by thing's exec script


String irr_on_off { channel="exec:command:weatherstation_irr_on_off:input" }
String water_on_off { channel="exec:command:weatherstation_water_on_off:input" }

//String fill_barrel { channel="exec:command:weatherstation_fill_barrel:input", autoupdate = "false" }

// Virtual variable section

Switch Irr_Switch {expire="3h,OFF"} 
Switch Valve_Switch {expire="600s,OFF"} 
Switch Fill_Switch  {expire="130s,OFF"} 

Number Display_level_out
// reading level will not take more than 8 s
Switch UpdateLevelSwitch {expire="60s,OFF"} 

String StatusText

String Level_out //  set by rule 
Switch InitSwitch {expire="60s,OFF"} // only for test of the 'system started' rule 
Switch TestModeSwitch {expire="1500s,OFF"} // expert mode, makes diagnostic switches and fields visible
Switch GardencontrolPowerSupply "Stromversorgung Pumpe und Ventil" { channel="mqtt:topic:myUnsecureBroker:powerSupply:PowerSupply" }

// BEGIN using this as a global variable within a rule
Switch FillTimerActive 
Switch Irrigating
// END
