 
String temperature_out <temperature> { channel="exec:command:weatherstation_temperature:output" }
String willRain_out <rain> { channel="exec:command:weatherstation_willRain:output" }
//Number precipitation_out <level> { channel="exec:command:weatherstation_howMuchRain:output" }
String isRaining_out <rain> { channel="exec:command:weatherstation_isRaining:output" }
//String Level_from_periodic_script { channel="exec:command:weatherstation_waterlevel:output", autorun="false" } // set by thing's exec script
String wanAddress <settings> { channel="exec:command:getwan:output" } // set by thing's exec script


String irr_on_off { channel="exec:command:weatherstation_irr_on_off:input" }
String water_on_off { channel="exec:command:weatherstation_water_on_off:input" }
// set alive heart beat 
Switch Set_alive { channel="exec:command:set_alive:run", autoupdate = "false" }
//String fill_barrel { channel="exec:command:weatherstation_fill_barrel:input", autoupdate = "false" }

// Virtual variable section

Switch Irr_Switch 
Switch Valve_Switch {expire="600s,OFF"} 
Switch Fill_Switch  {expire="130s,OFF"} 

Number Display_level_out
// reading level will not take more than 8 s
Switch UpdateLevelSwitch {expire="60s,OFF"} 

String StatusText
String SystemStatusText

String Level_out //  set by rule 
Switch LawnIrrigationSwitch
Switch InitSwitch {expire="60s,OFF"} // only for test of the 'system started' rule 
Switch TestModeSwitch // expert mode, makes diagnostic switches and fields visible
Switch GardencontrolPowerSupply "Stromversorgung Pumpe und Ventil" { channel="mqtt:topic:myUnsecureBroker:powerSupply:PowerSupply" }

Number Temperature_8266 <temperature> { channel="mqtt:topic:myUnsecureBroker:bme_thing:bme_temp_channel" }
Number Humidity_8266 <humidity> { channel="mqtt:topic:myUnsecureBroker:bme_thing:bme_hum_channel" }
Number Pressure_8266 <pressure> { channel="mqtt:topic:myUnsecureBroker:bme_thing:bme_pressure_channel" }
// Number Vcc_8266 <battery> { channel="mqtt:topic:myUnsecureBroker:bme_thing:vcc_channel" }

String Time_Solar1 <time> { channel="mqtt:topic:myUnsecureBroker:solar_module1_thing:time_channel" }
Number Vcc_Solar1 <battery> { channel="mqtt:topic:myUnsecureBroker:solar_module1_thing:vcc_channel" }
String Status_Solar1 { channel="mqtt:topic:myUnsecureBroker:solar_module1_thing:status_channel" }
Number Temp_Solar1 <temperature> { channel="mqtt:topic:myUnsecureBroker:solar_module1_thing:temp_channel" }

String Time_Solar2 <time> { channel="mqtt:topic:myUnsecureBroker:solar_module2_thing:time_channel" }
Number Vcc_Solar2 <battery> { channel="mqtt:topic:myUnsecureBroker:solar_module2_thing:vcc_channel" }
String Status_Solar2 { channel="mqtt:topic:myUnsecureBroker:solar_module2_thing:status_channel" }
Number Temp_Solar2 <temperature> { channel="mqtt:topic:myUnsecureBroker:solar_module2_thing:temp_channel" }

// BEGIN using this as a global variable within a rule
Switch FillTimerActive 
Switch Irrigating
Number LawnIrrigationTimeLeft
Number LawnIrrigationInterVal
// not displayed - for internal use only 
Number LawnIrrigationCounter
// END

Group gWeatherItems
  Number RainAverage (gWeatherItems)
  Number TempAverage (gWeatherItems)

Group:Number:MIN gBatteries
// Group:Number:MIN batteries 
  Number  Vcc_Solar1_Display <battery> (gBatteries)
  Number  Vcc_Solar2_Display <battery> (gBatteries)

