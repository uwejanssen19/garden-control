# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
#00 05 * * * /home/pi/scripts/supply4NextIrrigation.sh;/home/pi/scripts/irrOnOff.sh 1
#00 06 * * * /home/pi/scripts/supply4NextIrrigation.sh;/home/pi/scripts/irrOnOff.sh 1
#00 07 * * * /home/pi/scripts/irrOnOff.sh 0
#00 18 * * * /home/pi/scripts/supply4NextIrrigation.sh;/home/pi/scripts/irrOnOff.sh 1
#00 19 * * * /home/pi/scripts/supply4NextIrrigation.sh;/home/pi/scripts/irrOnOff.sh 1
#00 20 * * * /home/pi/scripts/irrOnOff.sh 0
# note: &>/dev/null only works with bash >= 4.x
#*/20 9-17 * * * /home/pi/scripts/depressure.sh   &>/dev/null
