
val String filename = "wartung.rules"

rule "Wartung: Unreach"
when
    Time cron "5 45 9,17 * * ?" or
    Item Whg_Wartung_Trigger received command ON
then
    logInfo(filename, "Wartung - Unreach läuft...")
    Unreach_Group.members.forEach(item | {
        if (item.state == ON) {
            logWarn(filename, "Wartung - Unreach FEHLER: " + item.label)
            pushover(item.label + " Warnung")
        }
    })
end

rule "Wartung: Fehler-Items"
when
    Time cron "0 45 9,17 * * ?" or
    Item Whg_Wartung_Trigger received command ON
then
    logInfo(filename, "Wartung - Fehler-Items läuft...")
    Error_Group.members.forEach(item | {
        if (item.state != "NO_FAULT" && item.state != "NO_ERROR") {
            logWarn(filename, "Wartung - Fehler-Item FEHLER: " + item.label + ": " + item.state)
            pushover(item.label + " (Status " + item.state + ")")
        }
    })
end

rule "Wartung: Batterien"
when
    Time cron "10 45 9,17 * * ?" or
    Item Whg_Wartung_Trigger received command ON
then
    logInfo(filename, "Wartung - Batterien läuft...")
    Bat_Binary.members.forEach(item | {
        //logInfo(filename, "Wartung - Batterie (Binary) '" + item.label + "' Type (" + item.type + "): " + item.state)
        if (item.state == ON) {
            logWarn(filename, "Wartung - Batterie schwach: " + item.label)
            pushover(item.label + " schwach")
        }
    })
    Bat_Volts.members.forEach(item | {
        //logInfo(filename, "Wartung - Batterie (Volts) '" + item.label + "' Type (" + item.type + "): " + item.state)
        if (item.state <= 2.4) {
            logWarn(filename, "Wartung - Batterie schwach: " + item.label)
            pushover(item.label + " schwach (" + item.state + "V)")
        }
    })
    Bat_Percent.members.forEach(item | {
        //logInfo(filename, "Wartung - Batterie (Percent) '" + item.label + "' Type (" + item.type + "): " + item.state)
        if (item.state <= 20) {
            logWarn(filename, "Wartung - Batterie schwach: " + item.label)
            pushover(item.label + " schwach (" + item.state + "%)")
        }
    })
end

// vim: syntax=Xtend
